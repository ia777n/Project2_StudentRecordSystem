/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package package1;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.awt.Color;
import java.sql.SQLException;
import java.sql.*;
import javax.swing.JOptionPane;
import java.lang.*;
/**
 *
 * @author DELL
 */
public class Update extends javax.swing.JFrame {
    boolean search=true;
    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    /**
     * Creates new form Update
     */
    public Update() {
        initComponents();
        Connect();
        textName.setText("");
        textName.setEnabled(true);
        textLast.setText("");
        textLast.setEnabled(false);
        textAddress.setText("");
        textAddress.setEnabled(false);
        textMobileNo.setText("");
        textMobileNo.setEnabled(false);
        textEmail.setText("");
        textEmail.setEnabled(false);
        textPass.setText("");
        textPass.setEnabled(false);
        

        editButton.setEnabled(false);
        
        

        Update.this.setLocation(330,140);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        textName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        textLast = new javax.swing.JTextField();
        textPass = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        textAddress = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        textMobileNo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        textEmail = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        labelPass = new javax.swing.JLabel();
        searchId = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(162, 62, 72));

        jPanel2.setBackground(new java.awt.Color(255, 82, 89));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Id Number:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("First Name:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Last Name:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Address:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Mobile no.:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Email:");

        labelPass.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelPass.setForeground(new java.awt.Color(255, 255, 255));
        labelPass.setText("Password:");

        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        editButton.setText("Update");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(labelPass))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(textName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                            .addComponent(textLast, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textAddress, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deleteButton)
                            .addComponent(textMobileNo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textEmail, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textPass, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchId)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(SearchButton)
                        .addGap(18, 18, 18)
                        .addComponent(editButton)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(searchId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(textLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(textAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textMobileNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(textEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPass)
                    .addComponent(textPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchButton)
                    .addComponent(editButton)
                    .addComponent(deleteButton))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void Connect()
    {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/isdb","root","kurosotchi123");

        } catch (ClassNotFoundException ex) {

        } catch (SQLException ex) {

        }
    }
    
    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        // TODO add your handling code here:
            try {      
            pst = con.prepareStatement("select Id,fname,lname,address, mobileno,email, password from reg_tbl where Id=? ");
            int id = Integer.parseInt(searchId.getText());
            pst.setInt(1, id);
            ResultSet rs1 = pst.executeQuery();
            if(rs1.next()==false)
                {
                JOptionPane.showMessageDialog(this, "Sorry Record Not Found");
                                textName.setText("");
                                textLast.setText("");
                                textAddress.setText("");
                                textMobileNo.setText("");
                                textEmail.setText("");
                                textPass.setText("");
                                
                                searchId.requestFocus();
                    }
                        else
                        {
                            textName.setEnabled(true);
                            textLast.setEnabled(true);
                            textAddress.setEnabled(true);
                            textMobileNo.setEnabled(true);
                            textEmail.setEnabled(true);
                            textPass.setEnabled(true);

                            textName.setText(rs1.getString("fname"));
                            textLast.setText(rs1.getString("lname"));
                            textAddress.setText(rs1.getString("address"));
                            textMobileNo.setText(rs1.getString("mobileno"));
                            textEmail.setText(rs1.getString("email"));
                            textPass.setText(rs1.getString("password"));
                            editButton.setEnabled(true);
        }
            
        } catch (SQLException ex) {
            //Logger.getLogger(SearchJdbc.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        int answer;
        answer = JOptionPane.showConfirmDialog(null, "Are you sure you want to update this record?","System Message",JOptionPane.YES_NO_OPTION);
        if(answer==JOptionPane.YES_OPTION){
        
            try {
                deleteButton.setEnabled(false);
            Connection cn;
            Statement st;
            String url;
            url = "jdbc:mysql://localhost:3306/isdb";
            Class.forName("com.mysql.cj.jdbc.Driver");
            cn = (Connection) DriverManager.getConnection(url, "root","kurosotchi123");
            st = (Statement) cn.createStatement();
            String newPassword = textPass.getText();
            if (validatePassword(newPassword)) {
            
                            if (!isValidEmail(textEmail.getText())) {
                    JOptionPane.showMessageDialog(null, "Please enter a valid email", "System Message",
                            JOptionPane.ERROR_MESSAGE);
                    return; 
                }

                String mobileNumber = textMobileNo.getText();
                if (!isValidMobileNumber(mobileNumber)) {
                    JOptionPane.showMessageDialog(null, "Mobile number should only contain numbers", "System Message",
                            JOptionPane.ERROR_MESSAGE);
                    return; 
                }
            
                // Update record
                st.executeUpdate("UPDATE reg_tbl SET  fname= '" + textName.getText() + "',lname= '"
                        + textLast.getText() + "', address= '" + textAddress.getText() + "',mobileno= '"
                        + textMobileNo.getText() + "',email = '" + textEmail.getText() + "',password='"
                        + newPassword + "' Where Id = '" + searchId.getText() + "' ");
                JOptionPane.showMessageDialog(null, "Record Updated", "System Message", JOptionPane.INFORMATION_MESSAGE);

                // Clear fields
                textName.setText("");
                textLast.setText("");
                textAddress.setText("");
                textMobileNo.setText("");
                textEmail.setEnabled(false);
                textPass.setText("");
            }

        } catch (ClassNotFoundException ex) {
            // Logger.getLogger(frameTerminateEdit.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            // Logger.getLogger(frameTerminateEdit.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_editButtonActionPerformed
    
    private boolean isValidEmail(String email) {
         return email != null && email.contains("@") && email.contains(".com");
    }

    private boolean isValidMobileNumber(String mobileNumber) {
        return mobileNumber != null && mobileNumber.matches("\\d+");
    }
    
    private boolean validatePassword(String password) {
    if (password == null || password.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Password cannot be empty", "System Message", JOptionPane.INFORMATION_MESSAGE);
        labelPass.setForeground(Color.red);
        return false;
    }
    if (password.length() < 8 || password.length() > 20) {
        JOptionPane.showMessageDialog(null, "Password must be between 8 to 20 characters", "System Message",
                JOptionPane.INFORMATION_MESSAGE);
        labelPass.setForeground(Color.red);
        return false;
    }

    boolean hasLowercase = false;
    boolean hasUppercase = false;
    boolean hasDigit = false;
    boolean hasSymbol = false;

    for (char c : password.toCharArray()) {
        if (Character.isLowerCase(c)) {
            hasLowercase = true;
        } else if (Character.isUpperCase(c)) {
            hasUppercase = true;
        } else if (Character.isDigit(c)) {
            hasDigit = true;
        } else if (isSymbol(c)) {
            hasSymbol = true;
        }
    }

    if (!hasLowercase) {
        JOptionPane.showMessageDialog(null, "Password must contain at least one lowercase letter", "System Message",
                JOptionPane.INFORMATION_MESSAGE);
        labelPass.setForeground(Color.red);
        return false;
    }
    if (!hasUppercase) {
        JOptionPane.showMessageDialog(null, "Password must contain at least one uppercase letter", "System Message",
                JOptionPane.INFORMATION_MESSAGE);
        labelPass.setForeground(Color.red);
        return false;
    }
    if (!hasDigit) {
        JOptionPane.showMessageDialog(null, "Password must contain at least one digit", "System Message",
                JOptionPane.INFORMATION_MESSAGE);
        labelPass.setForeground(Color.red);
        return false;
    }
    if (!hasSymbol) {
        JOptionPane.showMessageDialog(null, "Password must contain at least one symbol", "System Message",
                JOptionPane.INFORMATION_MESSAGE);
        labelPass.setForeground(Color.red);
        return false;
    }

    return true;
}

private boolean isSymbol(char c) {
    // Define your set of symbols
    String symbols = "!@#$%^&*()-_=+?{}:;\"',.<>";
    return symbols.indexOf(c) != -1;
}
        
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
                   int answer;
        answer = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this record?","System Message",JOptionPane.YES_NO_OPTION);
        if(answer==JOptionPane.YES_OPTION){
            try {
             Connection cn;
            Statement st;
            String url;



            url = "jdbc:mysql://localhost:3306/isdb";
            cn = (Connection) DriverManager.getConnection(url, "root","kurosotchi123");
            st = (Statement) cn.createStatement();
             st.executeUpdate("UPDATE reg_tbl SET  fname= '"+textName.getText()+
                     "',lname= '"+textLast.getText()+
                     "', address= '"+textAddress.getText()+
                     "',mobileno= '"+textMobileNo.getText()+
                     "',email = '"+textEmail.getText()+
                      "',password = '"+textPass.getText()+
                     "'Where id = '"+searchId.getText()+"' ");

                String query;
                query = "Delete From reg_tbl Where Id='" + searchId.getText() + "'";
                st.executeUpdate(query);
                JOptionPane.showMessageDialog(null, "Record Deleted","System Message",JOptionPane.INFORMATION_MESSAGE);
                 textName.setText("");
            textLast.setText("");
            textAddress.setText("");
            textMobileNo.setText("");
            textEmail.setText("");
            textPass.setText("");
           
            
            } catch (SQLException ex) {
            }
        }
        
        
    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Update().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SearchButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labelPass;
    private javax.swing.JTextField searchId;
    private javax.swing.JTextField textAddress;
    private javax.swing.JTextField textEmail;
    private javax.swing.JTextField textLast;
    private javax.swing.JTextField textMobileNo;
    private javax.swing.JTextField textName;
    private javax.swing.JPasswordField textPass;
    // End of variables declaration//GEN-END:variables
}
